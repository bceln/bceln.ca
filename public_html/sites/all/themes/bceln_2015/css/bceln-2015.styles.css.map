{"version":3,"sources":["bceln-2015.styles.scss","variables/_colors.scss","variables/_grid.scss","abstractions/_typography.scss","../node_modules/singularitygs/stylesheets/singularitygs/helpers/_clearfix.scss","base/_layout.scss","abstractions/_layout.scss","../node_modules/singularitygs/stylesheets/singularitygs/_api.scss","../node_modules/singularitygs/stylesheets/singularitygs/math/_columns.scss","../node_modules/singularitygs/stylesheets/singularitygs/helpers/_directions.scss","../node_modules/singularitygs/stylesheets/singularitygs/api/_isolation.scss","base/_typography.scss","variables/_typography.scss","base/_forms.scss","components/_layout.scss"],"names":[],"mappings":"AAEA,qBAAqB;ACArB,mBAAmB;AAYnB,0BAA0B;AAK1B,iBAAiB;AAMjB,yCAAyC;ACzBzC;;;;;;;;;;GAUG;AAcH,oDAAoD;AFjBpD,uBAAuB;AGmBvB,sCAAsC;AAqCtC;;;;;;;;;GASG;AH5DH,gBAAgB;AIFX;EACC,YAAY;EACZ,eAAe;EACf,YAAY,EAHL;;ACHb;EACE,iBAAgB,EADR;EDGL;IACC,YAAY;IACZ,eAAe;IACf,YAAY,EAHL;;ACCb;ECVE,kBAAkB;EAClB,mBAAmB;EACnB,kBJcuB,EGNb;EDDP;IACC,YAAY;IACZ,eAAe;IACf,YAAY,EAHL;;ACKb;EEkFI,iBCzEyB;EDyEzB,aE5Fa;EF4Fb,eG5DgD;EH4DhD,uBGzD0E;EHyD1E,YGpB0C;EL5D7C,iBAAgB,EAFG;;AAQpB;ECtBE,kBAAkB;EAClB,mBAAmB;EACnB,kBJcuB,EGMhB;EDbJ;IACC,YAAY;IACZ,eAAe;IACf,YAAY,EAHL;;ACiBb;EACC,kBAAiB;EEqEd,iBCzEyB;EDyEzB,aE5Fa;EF4Fb,eG5DgD;EH4DhD,uBGzD0E;EHyD1E,YGpB0C,ELlDpB;;AAI1B;EEkEI,iBCzEyB;EDyEzB,YAvCgF;EAuChF,oBGjDoD;EHiDpD,sBG7C+D;EH6C/D,YGpB0C;EL5C7C,mBAAkB,EAFP;;AM9BZ;EACE,gCCKkC;EDJlC,gBCAc;EDCd,mBCAiB;EDCjB,eViBmB,EUrBf;;AAM+B;EACpC,gBCUY;EDTT,kBCUkB;EDTlB,eVJiB;EUKpB,iBCciB,EDlBqB;;AEFtC;EACC,0BZemB;EYdhB,aAAa;EACb,aAAa;EAChB,sBAAqB;EACrB,YAAW,EALiB;;AAe5B;EACC,aAAY;EACZ,gBAAe;EACf,aAAY;EACZ,0BZHkB;EYIf,aAAa;EACb,aAAa,EANL;;AASb;EACC,oBZdiB;EYed,aAAa;EACb,aAAa;EACb,sBAAsB,EAJX;EAMd;IACI,yDAAwD;IACxD,gBAAgB;IAChB,aAAa;IACb,YAAY;IACZ,aAAa;IACb,aAAa;IACb,eAAe,EAPL;;AbjBhB,sBAAsB;AcftB;EACC,oBbD8B,EaAb;;AAWlB;EACC,mBAAkB;EACf,cAAc,EAFN;EAGX;IACC,kBAAiB;IACjB,mBAAkB;IACf,iBAAiB,EAHV;EAQV;IACC,mBAAmB;IAChB,gBAAgB;IAChB,UAAU,EAHM;EAKpB;IACC,mBAAkB;IAClB,UAAU;IACP,UAAU,EAHO;IAKjB;MACE,sBAAsB;MACtB,UAAU;MACV,WAAW,EAHN;MAKR;QACI,mBAAmB;QACnB,YAAY;QACZ,sBAAsB,EAHtB;QAIH;UACC,sBAAqB,EADnB;;AAUE;EACP,YAAY;EACZ,YAAY;EACZ,0Bb1CY;Ea2CZ,iBAAiB;EACjB,uBAAuB;EACvB,eAAe;EAClB,YAAW;EACR,aAAa;EACb,eAAe;EACf,oBAAoB,EAVJ;;AAgBpB;EAEC,mBAAkB,EAFD;EAIjB;IRzEC,kBAAkB;IAClB,mBAAmB;IACnB,kBJcuB,EYyDC;IVhErB;MACC,YAAY;MACZ,eAAe;MACf,YAAY,EAHL;IUmEX;MACmH,2BAA2B;MAChC,4BAA4B;MAC1B,2BAA2B;MAC1I,iEAA2B;MAAmF,qBAAqB,EAJpH;IAMG;MACb,YAAY;MACZ,aAAa;MACb,0Bb9Ec;Ma+Ed,aAAa;MACb,eAAe;MAClB,YAAW;MACR,eAAe;MAClB,mBAAkB;MAClB,WAAU;MACV,WAAU;MACP,oBAAoB,EAXC;IAa3B;MAEG,qDAAoD;MACpD,cAAc;MACd,mBAAmB;MPHpB,iBCzEyB;MDyEzB,aE5Fa;MF4Fb,eG5DgD;MH4DhD,uBGzD0E;MHyD1E,YGpB0C,EImBxB;IASpB;MACC,mBAAkB,EADA;;AAUX;EACN,YAAY;EACZ,aAAa;EACb,0Bb9GkB;Ea+GlB,aAAa;EACb,uBAAuB;EACvB,eAAe;EAClB,YAAW;EACR,eAAe;EAClB,cAAa;EACb,UAAS;EACN,oBAAoB,EAXN","file":"bceln-2015.styles.css","sourcesContent":["// Import variables, abstractions, base styles and components.\n// Uncomment the next lines and adjust them to your needs.\n/* -- Variables -- */\n@import \"variables/colors\";\n@import \"variables/grid\";\n@import \"variables/typography\";\n  \n/* -- Abstraction -- */\n@import \"abstractions/layout\";\n@import \"abstractions/typography\";\n//@import \"abstractions/components\";\n  \n/* -- Base -- */\n@import \"base/layout\";\n//@import \"base/lists\";\n@import \"base/typography\";\n@import \"base/forms\";\n  \n/* -- Components -- */\n@import \"components/navigation\";\n//@import \"components/jquery\";\n@import \"components/layout\";\n//@import \"components/blocks\";\n//@import \"components/nodes\";\n//@import \"components/views\";\n\n\n\n\n\n","$white: #FFF;\n  \n/* -- Violets -- */\n$violet-dark-gradiant:  #4C1E4F; // Violet Dark Used in Banner \n$violet-light-gradiant: #712C76; // Violet Light Gradiant Used in Banner\n\n$violet-dark: #712C76;  // Main Page titles , Menu Items,\n$violet-medium: #97649B; // Top level layover in Secondary titles front page blocks\n$violet-light: #CEB6D0; // Bottom level layover in Secondary titles front page blocks\n$violet-super-light:#CCB2CD; // Footer Links\n\n\n\n\n/* -- Vibrant Colors -- */\n$yellow: #FFAD00; // Brand-band & drop-down triangles , LEARN MORE\n$dark-cyan: #008499; // Read More and See More colors, Magnifying Box BG\n  \n  \n/* -- greys -- */\n$grey-light:  #F6F6F6; // Secondary titles front page blocks BG\n$grey-medium: #E9E9E9; // Secondary titles front page blocks BG, Search Box BG\n$grey-dark:   #333333; // Main Content Text Color\n  \n  \n/* -- adding some meaning to colors -- */\n$color-txt: $grey-dark;\n$color-menu-item: $violet-dark;\n$color-footer-link: $violet-super-light;  \n$color-link: $violet-dark;\n  \n//$btn-bg-color: $blue-medium;\n//$btn-txt-color: $white;\n//$btn-hover-bg-color: $grey-darker;\n//$btn-hover-txt-color: $white;\n//\n//$btn-sec-bg-color: $grey-darker;\n//$btn-sec-txt-color: $blue-medium;\n//$btn-sec-hover-bg-color: $blue-medium;\n//$btn-sec-hover-txt-color: $white;\n","/*\n * We are using a Singularity grid of 16 columns with split gutters.\n *\n * Default layout details:\n *  - mobile:  One sigle column, sidebar drops bellow main content, gutters 15px (15 / 60 = 0.25 = 1/4).\n *  - tablet:  Main content is 10 columns wide, right sidebar is 6, gutters unchanged.\n *  - desktop: Main content is 12 columns wide, right sidebar is 4, gutters 20px (20 / 60 = 0.3 = 1/3).\n *\n * For more info go to: https://github.com/at-import/Singularity/wiki/Creating-Grids\n *\n */\n@import \"breakpoint\";\n@import \"singularitygs\";\n@import \"singularitygs/helpers/clearfix\"; // for some reason this wasn't called from inside singularity\n  \n$tablet-layout: 768px;\n$desktop-layout: 992px;\n$max-width-layout: 1266px;\n \n@include add-grid(12);\n  \n@include add-gutter-style('split');\n@include add-gutter(15/39);\n  \n/* Uncomment bellow content to visualize the grid */\n","@mixin font-smoothing() {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n  \n@mixin font-weight($weight) {\n  font-weight: $weight;\n  \n  $need_smooth: (600, 'semi-bold', 700, 'bold');\n  @if index($need_smooth, $weight) {\n    @include font-smoothing();\n  }\n}\n  \n@mixin replace-text-with-image($url, $width, $height, $display: false, $repeat: 'no-repeat') {\n  background-image: url($url);\n  backgroune-repeat: $repeat;\n  @if $display != \"false\" {\n    display: $display;\n  }\n  height: $height;\n  overflow: hidden;\n  text-indent: -9999px;\n  width: $width;\n}\n  \n/* Integrating Fontello in our code */\n// Default rules for a font icon.\n%fontello-icon-defaults {\n  font-family: \"vf-fontello\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n  \n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n  \n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n  \n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n  \n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n  \n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n  \n  /* Font smoothing. That was taken from TWBS */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  \n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n  \n/**\n * Generate font icons via fontello icon fonts.\n *\n * @param  $content\n *   The font icon content value passed as is to css content.\n *   Example: '\\E801' - along with single quotes. Refer to your fontello.css file.\n * @param  $position\n *   (optional) The type of the pseudo-element, can be 'before' or 'after'.\n *   Defaults to 'before'.\n */\n@mixin fontello-icon($code, $position: 'before') {\n  &::#{$position} {\n    @content;\n    content: '#{$code}';\n    @extend %fontello-icon-defaults;\n    @content;\n  }\n}\n  \n//\n// Highlighted text\n// =================================\n@mixin highlighted-text {\n  font-size: $fz-h3;\n  @include font-weight($fw-light);\n  line-height: 1.5em;\n  margin-bottom: 1.1em;\n  @content;\n}\n","//////////////////////////////\n// Clearfix Mixin\n//////////////////////////////\n$clearfix-extend: false !default;\n\n@mixin clearfix($extend: $clearfix-extend) {\n  @if $extend {\n    @extend %singularity-clearfix;\n  }\n  @else {\n    &:after {\n      content: \"\";\n      display: table;\n      clear: both;\n    }\n  }\n}\n\n%singularity-clearfix {\n  @include clearfix(false);\n}","//\n// Main Content\n// =================================  \n.l-header{\n    @include clearfix;\n//    @include grid-container;\n}\n.l-footer{\n  background:blue;\n  @include clearfix;\n}\n.l-branding{\n    @include clearfix;\n    @include grid-container;  \n}\n.l-region--branding{\n    @include grid-span(12, 1);\n\tbackground:cyan;\t\n\t\n}\n//\n// Main Content\n// =================================\n.l-main {\n  @include clearfix;\n  @include grid-container;  \n}\n.l-region--sidebar-second{\n\tbackground:green;\n    @include grid-span(3, 10);\n}\n.l-content {\n    @include grid-span(9, 1);\n\tbackground:yellow;\n}\n\n//.l-content {\n//  @include breakpoint($tablet-layout) {\n//\n//  }\n//  .l-region--sidebar-second{\n////      @include grid-span(3, 9);\n//\tbackground:red;\n//\n//  }\n//\n//  @include breakpoint($desktop-layout) {\n//    @include grid-span(12, 1);\n//  }\n\n//  body.no-sidebars & {\n//    @include breakpoint($tablet-layout) {\n//      @include grid-span(16, 1);\n//    }\n//  }\n//}\n//\n  \n ","@mixin grid-container {\n  margin-left: auto;\n  margin-right: auto;\n  max-width: $max-width-layout;\n}\n","@import \"api/float\";\n@import \"api/isolation\";\n@import \"api/calc\";\n\n//////////////////////////////\n// Master Grid Span mixin\n//////////////////////////////\n@mixin grid-span($span, $location: 1, $grid: null, $gutter: null, $output-style: null, $gutter-style: null, $options: null) {\n\n  @if $output-style == null {\n    $output-style: sgs-get('output');\n  }\n\n  $Grid: find-grid($grid);\n  $Gutter: find-gutter($gutter);\n  $Style: find-gutter-style($gutter-style);\n\n  $Start-Row: start-row($location);\n  $End-Row: end-row($span, $location, $Grid);\n\n  $Fixed-Gutter: fixed-gutter($Grid, $Gutter, $Style);\n  $Split-Gutter: index($Style, 'split');\n  $Gutter-Property: gutter-property($Grid, $Gutter, $Style);\n\n  $Direction: sgs-get('direction');\n  $From: if($options and type-of($options) == 'map', if(map-get($options, 'from'), map-get($options, 'from'), $Direction), $Direction);\n  $From: if($From == 'ltr' or $From == 'rtl', named-direction($From), $From);\n\n  $Holder: ();\n  @each $k, $v in $options {\n    $Holder: if($k == 'from', $Holder, map-merge($Holder, ($k: $v)));\n  }\n  $options: if(length($Holder) > 0, $Holder, null);\n\n  $Span-Map: (\n    'span': $span,\n    'location': $location,\n    'grid': $Grid,\n    'gutter': $Gutter,\n    'style': $Style,\n    'start row': $Start-Row,\n    'end row': $End-Row,\n    'fixed gutter': $Fixed-Gutter,\n    'split gutter': $Split-Gutter,\n    'gutter property': $Gutter-Property,\n    'options': $options\n  );\n\n  @if sgs-get('debug') != false {\n    -sgs-span-settings: inspect($Span-Map);\n  }\n\n\n  @if function-exists('output-#{$output-style}') {\n    $Left: ();\n    $Right: ();\n\n    @if $Direction == 'both' or $From == 'left' or ($Direction == 'rtl' and $From == 'opposite') {\n      $Left: call('output-#{$output-style}', map-merge($Span-Map, ('direction': left)));\n    }\n\n    @if $Direction == 'both' or $From == 'right' or ($Direction == 'ltr' and $From == 'opposite') {\n      $Right: call('output-#{$output-style}', map-merge($Span-Map, ('direction': right)));\n    }\n\n    $Left-Keys: map-keys($Left);\n    $Right-Keys: map-keys($Right);\n    $Exclude: ();\n\n    @each $key in $Left-Keys {\n      @if index($Right-Keys, $key) {\n        @if map-get($Right, $key) == map-get($Left, $key) {\n          $Exclude: append($Exclude, $key);\n        }\n      }\n    }\n\n    // Always try and print the Left value\n    @include grid-span-build-exclude($Left, $Exclude, false);\n\n    // If Direction is Both or RTL, add the RTL attribute selector\n    @if $Direction == 'both' or $Direction == 'rtl' {\n      [dir=\"rtl\"] & {\n        @include grid-span-build-exclude($Right, $Exclude, true);\n      }\n    }\n    @else {\n      @include grid-span-build-exclude($Right, $Exclude, true);\n    }\n  }\n  @else {\n    @warn \"There doesn't appear to be an output style named `#{$output-style}`. Please ensure that the function `output-#{$output-style}` and that the output style `#{$output-style}` are both available before trying to use them.\";\n  }\n}\n\n@mixin grid-span-build($property, $value) {\n  @if type-of($value) != 'map' {\n    #{$property}: $value;\n  }\n  @else {\n    @each $prefix, $val in $value {\n      #{$property}: $val;\n    }\n  }\n}\n\n@mixin grid-span-build-exclude($properties, $delta, $exclude: false) {\n  @each $property, $value in $properties {\n    @if $exclude {\n      @if not index($delta, $property) {\n        @include grid-span-build($property, $value);\n      }\n    }\n    @else {\n      @include grid-span-build($property, $value);\n    }\n  }\n}","//////////////////////////////\n// Find width, in percentages, of the column span\n//////////////////////////////\n@function column-span($span, $location, $grid: null, $gutter: null, $gutter-style: null) {\n  // Find the grid and gutters\n  $grid: find-grid($grid);\n  $gutter: find-gutter($gutter);\n  $gutter-style: find-gutter-style($gutter-style);\n\n  @if fixed-gutter($grid, $gutter, $gutter-style) {\n    $gutter: 0;\n  }\n\n  // @debug $grid;\n  // @debug $gutter;\n\n  // Combine the grid and gutters\n  $grid-and-gutters: column-sum($grid, $gutter, $gutter-style);\n\n  // @debug $grid-and-gutters;\n\n  // Equal width grid are easy! Deal with them!\n  @if type-of($grid) == 'number' or length($grid) == 1 {\n    $span-and-gutters: $span + $gutter * ($span - 1);\n    @return $span-and-gutters / $grid-and-gutters * 100%;\n  }\n  // Asymmetric lists are harder, so we're going to treat them as their own grid\n  @else if type-of($grid) == 'list' or length($grid) > 1 {\n    $span-and-gutters: 0;\n\n    @if $location == 1 and $span >= 1 {\n      @for $i from 1 through $span {\n        $span-and-gutters: $span-and-gutters + nth($grid, $i) + $gutter;\n      }\n    }\n    @else {\n      $total: $location + $span - 1;\n      @if $total != 0 {\n        @for $i from $location through $total {\n          $span-and-gutters: $span-and-gutters + nth($grid, $i) + $gutter;\n        }\n      }\n    }\n    $span-and-gutters: $span-and-gutters - $gutter;\n\n    @return $span-and-gutters / $grid-and-gutters * 100%;\n  }\n  @else {\n    @warn \"Can't find a working set of grid! That's terrible!\";\n    @return false;\n  }\n}\n\n//////////////////////////////\n// Find the total sum of the grid\n//////////////////////////////\n@function column-sum($grid, $gutter, $gutter-style) {\n  $split: if(index($gutter-style, 'split'), true, false);\n\n  @if type-of($grid) == 'number' or length($grid) == 1 {\n    @if $split {\n      @return nth($grid, 1) + ((column-count(nth($grid, 1))) * nth($gutter, 1));\n    }\n    @else {\n      @return nth($grid, 1) + ((column-count(nth($grid, 1)) - 1) * nth($gutter, 1));\n    }\n\n  }\n  @else if type-of($grid) == 'list' {\n    $sum: 0;\n    @each $column in $grid {\n      $sum: $sum + nth($column, 1);\n    }\n    @if $split {\n      $sum: $sum + (column-count($grid)) * nth($gutter, 1);\n    }\n    @else {\n      $sum: $sum + (column-count($grid) - 1) * nth($gutter, 1);\n    }\n    @return $sum;\n  }\n}\n\n//////////////////////////////\n// Find the number of grid\n//////////////////////////////\n@function column-count($grid) {\n  @if type-of($grid) == 'number' {\n    @return $grid;\n  }\n  @if type-of($grid) == 'list' {\n    @if length($grid) == 1 {\n      @return nth($grid, 1);\n    }\n    @else {\n      @return length($grid);\n    }\n  }\n}","//////////////////////////////\n// Find Opposite Direction\n//////////////////////////////\n@function opposite-direction($dir) {\n  @if $dir == 'left' {\n    @return right;\n  }\n  @else if  $dir == 'right' {\n    @return left;\n  }\n  @else if $dir == 'ltr' {\n    @return rtl;\n  }\n  @else if $dir == 'rtl' {\n    @return ltr;\n  }\n  @else if $dir == 'top' {\n    @return bottom;\n  }\n  @else if $dir == 'bottom' {\n    @return top;\n  }\n  @else {\n    @warn \"#{$dir} is not a direction! Make sure your direction is all lowercase!\";\n    @return false;\n  }\n}\n\n//////////////////////////////\n// Find Direction Name\n//////////////////////////////\n@function named-direction($dir) {\n  @if $dir == 'ltr' {\n    @return left;\n  }\n  @else if $dir == 'rtl' {\n    @return right;\n  }\n  @else {\n    @warn \"#{$dir} is not a valid HTML direction! Make sure you are using a valid HTML direction\";\n    @return false;\n  }\n}","@function output-isolation($Span-Map) {\n  // Set up Left/Right maps\n  $Return: ();\n\n  $Span: map-get($Span-Map, 'span');\n  $Location: map-get($Span-Map, 'location');\n\n  $Grid: map-get($Span-Map, 'grid');\n  $Gutter: map-get($Span-Map, 'gutter');\n  $Style: map-get($Span-Map, 'style');\n\n  $Start-Row: map-get($Span-Map, 'start row');\n  $End-Row: map-get($Span-Map, 'end row');\n\n  $Fixed-Gutter: map-get($Span-Map, 'fixed gutter');\n  $Split-Gutter: map-get($Span-Map, 'split gutter');\n  $Gutter-Property: map-get($Span-Map, 'gutter property');\n\n  $Direction: map-get($Span-Map, 'direction');\n  $Options: map-get($Span-Map, 'options');\n\n  $Width: column-span($Span, $Location, $Grid, $Gutter, $Style);\n  $Margin-Span: column-span(($Location - 1), 1, $Grid, $Gutter, $Style);\n  $Gutter-Span: gutter-span($Gutter, $Grid);\n\n  // Backwards Compatibility for Options\n  @if type-of($Options) != 'map' and $Options != null {\n    $Options: ('clear': unquote(nth($Options, 1)));\n  }\n\n  $Dir: $Direction;\n  $Opp: opposite-direction($Dir);\n\n  $Return: map-merge($Return, ('width': $Width));\n\n  @if ($End-Row) {\n    $Return: map-merge($Return, ('float': $Opp));\n    $Return: map-merge($Return, ('margin-#{$Dir}': 0));\n\n    @if $Split-Gutter and not $Fixed-Gutter {\n      $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Opp}': $Gutter-Span / 2));\n    }\n    @else {\n      $Return: map-merge($Return, ('margin-#{$Opp}': 0));\n    }\n  }\n  @else {\n    $Return: map-merge($Return, ('float': $Dir));\n    $Return: map-merge($Return, ('margin-#{$Opp}': -100%));\n\n    @if $Start-Row {\n      @if $Split-Gutter and not $Fixed-Gutter {\n        $Return: map-merge($Return, ('margin-#{$Dir}': $Gutter-Span / 2));\n      }\n      @else if not $Fixed-Gutter {\n        $Return: map-merge($Return, ('margin-#{$Dir}': 0));\n      }\n    }\n    @else {\n      @if $Split-Gutter and not $Fixed-Gutter {\n        $Return: map-merge($Return, ('margin-#{$Dir}': $Margin-Span + $Gutter-Span + $Gutter-Span / 2));\n      }\n      @else if not $Fixed-Gutter {\n        $Return: map-merge($Return, ('margin-#{$Dir}': $Margin-Span + $Gutter-Span));\n      }\n      @else {\n        $Return: map-merge($Return, ('margin-#{$Dir}': $Margin-Span));\n      }\n    }\n  }\n  // If options are set, we merge them in!\n  @if ($Options) {\n    $Return: map-merge($Return, $Options);\n  }\n\n  // If CLear isn't already available, set it!\n  @if not map-has-key($Return, 'clear') {\n    $Return: map-merge($Return, ('clear': none));\n  }\n\n  // Left Fixed Gutters\n  @if $Fixed-Gutter {\n    @if index($Style, 'split') {\n      $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Dir}': $Gutter-Span / 2));\n      $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Opp}': $Gutter-Span / 2));\n    }\n    @else {\n      @if not $End-Row {\n        $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Opp}': $Gutter-Span));\n      }\n      @else {\n        $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Opp}': 0));\n      }\n    }\n  }\n\n  @return $Return;\n}\n\n//////////////////////////////\n// Happy Syntax for Isolation\n//\n// Makes working with Isolation easier, as it moves Clear to a 1st class citizen of the mixin, and automatically builds the verbose grid-span mixin call\n//////////////////////////////\n@mixin isolation-span($Span, $Location, $clear: false, $grid: false, $gutter: false, $gutter-style: false, $from: false) {\n  $Options: ();\n  @if $clear {\n    $Options: map-merge($Options, ('clear': unquote($clear)));\n  }\n  @if $from {\n    $Options: map-merge($Options, ('from': $from));\n  }\n\n  $Options: if(length($Options) > 0, $Options, null);\n  @include grid-span($Span, $Location, $grid, $gutter, 'isolation', $gutter-style, $Options);\n}\n\n//////////////////////////////\n// Happy Syntax of Asymmetric Grids\n//\n// Makes working with asymmetric grids easier!\n//////////////////////////////\n@mixin asymmetric-span($Location, $Span: false, $grid: false, $gutter: false, $gutter-style: false, $from: false, $output-style: false) {\n\n  $Span: if($Span != false, $Span, 1);\n  $output-style: if($output-style != false, $output-style, sgs-get('asymmetric output'));\n\n  $Options: ();\n  @if $from {\n    $Options: map-merge($Options, ('from': $from));\n  }\n  $Options: if(length($Options) > 0, $Options, null);\n\n  @include grid-span($Span, $Location, $grid, $gutter, $output-style, $gutter-style, $Options);\n}","\nbody {\n  font-family: $font-source-lato;\n  font-size: $font-size;\n  line-height: $line-height;\n  color: $color-txt;\n}\n#block-menu-block-2 .menu-block-2 li a{\n\tfont-size: $fz-menu;\n    line-height: $line-height-menu;\n    color: $color-menu-item;\n\tfont-weight:$fw-bold;\n}\n","$space-width: 0.2222em;\n  \n// Base size and height\n$font-size: 17px;\n$line-height: 1.5em;\n  \n// Font families\n$font-source-lato:'Lato', sans-serif;\n  \n// Font sizes\n$fz-h1: 48px;\n$fz-h2: 38px;\n$fz-h3: 24px;\n$fz-h4: 24px;\n$fz-h5: 18px;\n$fz-h6: 20px;\n\n// Menu\n$fz-menu:20px;\n$line-height-menu:22px;  \n  \n// Font weights\n$fw-light:     300;\n$fw-normal:    400;\n$fw-semi-bold: 600;\n$fw-bold:      900;\n","//\n// Branding's Search Form\n// =================================\n\n.search-block-form {\n\t.form-item-search-block-form{\n\t\tbackground-color:$grey-medium;\n\t    height: 30px;\n\t    width: 170px;\n\t\tdisplay:inline-block;\n\t\tborder:0px;\n\t}\n\t#edit-search-block-form--2{\n//\t    width: 170px;\n//\t\tborder:none;\n//\t\tbackground-color:$grey-medium;\n//\t    height: 30px;\n//\t\tpadding:0px;\n\t}\n\t.form-item-search-block-form{\n\t\t.form-text {\n\t\t\tborder:none;\n\t\t\tfont-size:17px;\n\t\t\tpadding:2px;\n\t\t\tbackground-color:$grey-medium;\n\t\t    height: 26px;\n\t\t    width: 170px;\n\t\t}\n\t}\n\t.form-actions {\n\t\tbackground:$dark-cyan;\n\t    height: 26px;\n\t    padding: 2px;\n\t    display: inline-block;\n\t\t\n\t\t.form-submit {\n\t\t    background: url(\"../images/mag.png\") no-repeat -1px -5px;\n\t\t    cursor: pointer;\n\t\t    border: none;\n\t\t    width: 26px;\n\t\t    height: 31px;\n\t\t    padding: 0px;\n\t\t    font-size: 0px;\n\t\t}\n\t}\n\n}","//\n// Page\n// =================================\n.l-region--header{\n\tbackground:$violet-dark-gradiant;\n\n}\n\n\n\n//\n// Branding AND Branding Region\n// =================================\n\n.l-branding{\n\tposition:relative;\n    height: 157px;\n\t.site-logo{\n\t\tmargin-left:17px;\n\t\tposition:absolute;\n\t    margin-top: 47px;\n\t\t\n\t}\n\t.l-region--branding {\n\n\t\t#block-search-form {\n\t\t\tposition: absolute;\n\t\t    right: 1.15741%;\n\t\t    top: 20px;\n\t\t}\n\t\t#block-menu-block-2 {\n\t\t\tposition:absolute;\n\t\t\tright: 1%;\n\t\t    top: 60px;\n\t\t\t.menu-name-main-menu{\n\t\t\t\tul.menu {\n\t\t\t\t    list-style-type: none;\n\t\t\t\t    margin: 0;\n\t\t\t\t    padding: 0;\n\t\t\t\t\n\t\t\t\t\tli {\n\t\t\t\t\t    margin-right: 65px;\n\t\t\t\t\t    width: 65px;\n\t\t\t\t\t    display: inline-block;\n\t\t\t\t\t\ta {\n\t\t\t\t\t\t\ttext-decoration:none;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n.l-branding:before {\n    content: '';\n    height: 7px;\n    background-color: $yellow;\n    width: 97.68519%;\n    margin-right: 1.15741%;\n    margin-left: 0;\n\tclear:none;\n    float: right;\n    display: block;\n    margin-bottom: 37px;\n\t};\n\n//\n// Header Region\n// =================================\n.l-region--header{\n//\theight:310px;\n\tposition:relative;\n\t\n\t#block-boxes-homepage--2{\n\t    @include clearfix;\n\t    @include grid-container;\n\t\t.block__content{\n\t\t\tbackground: -webkit-linear-gradient(left, $violet-dark-gradiant , $violet-light-gradiant, $violet-dark-gradiant); /* For Safari 5.1 to 6.0 */\n\t\t\tbackground: -o-linear-gradient(right, $violet-dark-gradiant, $violet-light-gradiant, $violet-dark-gradiant); /* For Opera 11.1 to 12.0 */\n\t\t\tbackground: -moz-linear-gradient(right, $violet-dark-gradiant, $violet-light-gradiant, $violet-dark-gradiant); /* For Firefox 3.6 to 15 */\n\t\t\tbackground: linear-gradient(to right, $violet-dark-gradiant , $violet-light-gradiant, $violet-dark-gradiant); /* Standard syntax */\n\t\t}\n\t\t#boxes-box-homepage:before{\n\t\t\t\t    content: '';\n\t\t\t\t    height: 23px;\n\t\t\t\t    background-color:$violet-light;\n\t\t\t\t    width: 65.1%;\n\t\t\t\t    margin-left: 0;\n\t\t\t\t\tclear:none;\n\t\t\t\t    display: block;\n\t\t\t\t\tposition:absolute;\n\t\t\t\t\ttop:-23px;\n\t\t\t\t\tright:0px;\n\t\t\t\t    margin-bottom: 37px;\n\t\t\t\t};  \n\t\t#boxes-box-homepage{\n\t\t\n\t    background: url(\"../images/header-bg.png\") no-repeat;\n\t    height: 312px;\n\t    position: relative;\n\t    @include grid-span(12,1);\n\t\t\n\t\t\n\t\t}\n\t\t.boxes-box-content{\n\t\t\tposition:absolute;\n\t\t\t\n\t\t}\t\n\t}\n\t\n}\n//\n// Content\n// =================================\n.l-content:before{\n    content: '';\n    height: 23px;\n    background-color:$violet-light;\n    width: 880px;\n    margin-right: 1.15741%;\n    margin-left: 0;\n\tclear:both;\n    display: block;\n\tbottom:-23px;\n\tleft:0px;\n    margin-bottom: 37px;\n};"],"sourceRoot":"/source/"}